# Envoy Configuration for CLI Client (Client-side Proxy)
# This configuration provides mTLS connectivity for CLI client to communicate with API service

node:
  id: "cli-client-envoy"
  cluster: "fargate-envoy-spire"

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  # Listener for local CLI client HTTP requests (converted to mTLS)
  - name: cli_client_http_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080  # Local port for CLI client connections
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: cli_client_proxy
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: cli_proxy
              domains: ["*"]
              routes:
              # Route all requests to API service via mTLS
              - match:
                  prefix: "/"
                route:
                  cluster: api_service_mtls
                  timeout: 30s
                  # Add headers to identify the source
                  request_headers_to_add:
                  - header:
                      key: "x-forwarded-by"
                      value: "cli-client-envoy"
                    append: false
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  # SPIRE Agent cluster for SDS certificate management
  - name: spire_agent
    connect_timeout: 0.25s
    http2_protocol_options: {}
    load_assignment:
      cluster_name: spire_agent
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              pipe:
                path: /tmp/spire-agent/public/api.sock

  # API Service via mTLS
  - name: api_service_mtls
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: api_service_mtls
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: api-service-with-envoy  # Docker service name
                port_value: 8080                 # API service Envoy mTLS port
    # mTLS transport socket for outgoing connections
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          # Use SPIRE-issued certificate for client authentication
          tls_certificate_sds_secret_configs:
          - name: "spiffe://example.org/cli-client"
            sds_config:
              resource_api_version: V3
              api_config_source:
                api_type: GRPC
                transport_api_version: V3
                grpc_services:
                  envoy_grpc:
                    cluster_name: spire_agent
          # Validate server certificate using SPIRE trust bundle
          combined_validation_context:
            default_validation_context:
              # Expect API service identity
              match_typed_subject_alt_names:
              - san_type: URI
                matcher:
                  exact: "spiffe://example.org/api-service"
            validation_context_sds_secret_config:
              name: "spiffe://example.org"
              sds_config:
                resource_api_version: V3
                api_config_source:
                  api_type: GRPC
                  transport_api_version: V3
                  grpc_services:
                    envoy_grpc:
                      cluster_name: spire_agent
